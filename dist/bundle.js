/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! exports provided: data */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"data\", function() { return data; });\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./view */ \"./src/js/view.js\");\n/* harmony import */ var _model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./model */ \"./src/js/model.js\");\n\r\n\r\n\r\n\r\n\r\nlet data = {\r\n    twoPlayer: false,\r\n    secondQuiz: false,\r\n    player1turn: true\r\n}\r\n\r\nfunction selectPlayers(amount) {\r\n    if (amount === '1') {\r\n        data.players = 1; // don't know if I need to do this\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].playerSelect.style.display = 'none';\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].inputForm.style.display = 'flex';\r\n    } else if (amount === '2') {\r\n        //add data here to state to say it is two player\r\n        data.twoPlayer = true;\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].playerSelect.style.display = 'none';\r\n        // put the normal form here and just collect the data to a different place\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].inputForm.style.display = 'flex';\r\n    }\r\n}\r\n\r\n// I have a lot of event listeners on the container, should I put all of them in one event listener?\r\n_view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].container.addEventListener('click', function(e){\r\n    if (e.target.value === '1' || '2') {\r\n        selectPlayers(e.target.value);\r\n    }\r\n});\r\n\r\nconst playQuiz = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // get the inputs from the user\r\n    const query = _model__WEBPACK_IMPORTED_MODULE_1__[\"getUserInput\"]();\r\n\r\n    // create new quiz\r\n    if(query) {\r\n        if(data.secondQuiz && data.twoPlayer) {\r\n            // close input page and move to quiz\r\n            _view__WEBPACK_IMPORTED_MODULE_0__[\"toggleInputForm\"]();\r\n            _view__WEBPACK_IMPORTED_MODULE_0__[\"renderLoader\"]();\r\n\r\n            // create quiz\r\n            data.newQuiz2 = new _model__WEBPACK_IMPORTED_MODULE_1__[\"createQuiz\"](query.name, query.amount, query.category, query.difficulty);\r\n            data.newQuiz2.createFetchRequest();\r\n            await data.newQuiz2.getQuiz();\r\n            _view__WEBPACK_IMPORTED_MODULE_0__[\"clearLoader\"]();\r\n        } else { // this is player 1\r\n            // close input page and move to quiz\r\n            _view__WEBPACK_IMPORTED_MODULE_0__[\"toggleInputForm\"]();\r\n            _view__WEBPACK_IMPORTED_MODULE_0__[\"renderLoader\"]();\r\n\r\n            // create quiz\r\n            data.newQuiz1 = new _model__WEBPACK_IMPORTED_MODULE_1__[\"createQuiz\"](query.name, query.amount, query.category, query.difficulty);\r\n            data.newQuiz1.createFetchRequest();\r\n            await data.newQuiz1.getQuiz();\r\n            _view__WEBPACK_IMPORTED_MODULE_0__[\"clearLoader\"]();\r\n        }\r\n    }\r\n    \r\n    if (data.twoPlayer && !data.secondQuiz) {\r\n        // 1. add the player1 quiz\r\n        data.player1 = new _model__WEBPACK_IMPORTED_MODULE_1__[\"readyQuiz\"](data.newQuiz1.results, data.newQuiz1.amount, data.newQuiz1.name);\r\n        // 2. clear input form data\r\n\r\n        // 3. show input form\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"toggleInputForm\"]();\r\n        // 4. tell it that it is the second quiz\r\n        data.secondQuiz = true;\r\n        // 5. stop function from running\r\n        return -1;\r\n    }\r\n    \r\n    if(data.secondQuiz && data.twoPlayer){\r\n        data.player2 = new _model__WEBPACK_IMPORTED_MODULE_1__[\"readyQuiz\"](data.newQuiz2.results, data.newQuiz2.amount, data.newQuiz2.name);\r\n        // this is to set up the quiz for the first player first question\r\n        data.player1.setQuestion();\r\n        data.player2.setQuestion();\r\n        _model__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestionBoard\"](1);\r\n    } else { // this is one player\r\n        data.player1 = new _model__WEBPACK_IMPORTED_MODULE_1__[\"readyQuiz\"](data.newQuiz1.results, data.newQuiz1.amount, data.newQuiz1.name);\r\n        data.player1.setQuestion();\r\n        _model__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestionBoard\"](1);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n// set up event listeners to get name onto question page and \r\n_view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].container.addEventListener('click', function(e){ \r\n    if (e.target.matches('.submitQuiz')) {\r\n        // if two players then load the question board again\r\n        playQuiz(e);\r\n    }\r\n});\r\n\r\n\r\nfunction selectAnswer(e) {\r\n    if (data.player1turn){ // check to see if player 1 turn\r\n        if (e.target.id === data.player1.correctAnswer){ // check if answer is correct\r\n            data.player1.points++\r\n        } \r\n        // change to player two first questions\r\n        data.player1turn = false;\r\n        data.player1.nextQuestion();\r\n        _model__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestionBoard\"](2);\r\n        console.log(data)\r\n    } else {\r\n        console.log('it knows it is player 2 turn')\r\n        if (e.target.id === data.player2.correctAnswer){ // check if answer is correct\r\n            data.player2.points++\r\n        } \r\n        data.player1turn = true;\r\n        data.player2.nextQuestion();\r\n        _model__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestionBoard\"](1); \r\n        console.log(data)       \r\n    }   \r\n}\r\n\r\n_view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].container.addEventListener('click', function(e){\r\n    if (e.target.matches('li')) {\r\n        selectAnswer(e);\r\n    }\r\n});\r\n\r\nfunction resetQuiz() {\r\n    if (data.player1.stage === 'result') {\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"DOMstrings\"].resultsPage.style.display = 'none';\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"clearHTML\"]('.answerOptions');\r\n        data.player1.setQuestion();\r\n        // will have to change this later to add two player functionality\r\n        _model__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestionBoard\"](1);\r\n    } else {\r\n        _view__WEBPACK_IMPORTED_MODULE_0__[\"clearHTML\"]('.answerOptions');\r\n        data.player1.setQuestion();\r\n        data.player1.updateHeader();\r\n        data.player1.updateQuestion();\r\n        data.player1.updateAnswers();\r\n    }\r\n}\r\ndocument.body.addEventListener('click', function(e){\r\n    if(e.target.matches('.startQuizAgain')){\r\n        resetQuiz();\r\n    }\r\n});\r\n\r\n\r\nfunction newQuiz() {\r\n    // remove questions and answers or results page\r\n    _view__WEBPACK_IMPORTED_MODULE_0__[\"removeQandA\"]();\r\n    _view__WEBPACK_IMPORTED_MODULE_0__[\"removeResultsPage\"]();\r\n    // remove btns\r\n    _view__WEBPACK_IMPORTED_MODULE_0__[\"toggleBtns\"]();\r\n    // add input form\r\n    _view__WEBPACK_IMPORTED_MODULE_0__[\"toggleInputForm\"]();\r\n    // clear quiz data from data\r\n    \r\n    if(data.twoPlayer){\r\n        // don't do anything at the moment\r\n        // I've added new parameters to the data\r\n    } else {\r\n        data.player1 = {};\r\n    }  \r\n    // data = {};\r\n}\r\n\r\ndocument.body.addEventListener('click', function(e){\r\n    if(e.target.matches('.newQuiz')){\r\n        newQuiz();\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ }),

/***/ "./src/js/model.js":
/*!*************************!*\
  !*** ./src/js/model.js ***!
  \*************************/
/*! exports provided: getUserInput, createQuiz, readyQuiz, setupQuestionBoard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUserInput\", function() { return getUserInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createQuiz\", function() { return createQuiz; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"readyQuiz\", function() { return readyQuiz; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupQuestionBoard\", function() { return setupQuestionBoard; });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/js/main.js\");\n/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./view */ \"./src/js/view.js\");\n\r\n\r\n\r\n\r\n\r\nconst getUserInput = () => {\r\n    // as the categories are identified using a number, the id in the object array in view.js, I need to get the \r\n    // value of the category the user enters in the input form and then find the name of the category in the list \r\n    function getCategoryID(category) {\r\n        if (category) {\r\n            const element = _view__WEBPACK_IMPORTED_MODULE_1__[\"categories\"].find(cur => cur.name === category);\r\n            return element.id;\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    const quizSettings = {\r\n        name: document.getElementById('name').value,\r\n        amount: Number(_view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].questionAmount.value),\r\n        category: getCategoryID(_view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].category.value),\r\n        difficulty: _view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].difficulty.value,\r\n    }\r\n    return quizSettings;\r\n}\r\n\r\n// create quiz class\r\nclass createQuiz {\r\n    constructor(name='', amount=10, category='', difficulty='') {\r\n        this.name = name;\r\n        this.amount = amount;\r\n        this.category = category;\r\n        this.difficulty = difficulty;\r\n    }\r\n\r\n    createFetchRequest(){\r\n        let fetchRequest = '';\r\n        // change this to switch statement\r\n        if (this.name === '') {\r\n            console.log('Please enter a name...')\r\n        } else if (this.amount === 0 && this.category === '' && this.difficulty === ''){\r\n            fetchRequest = 'https://opentdb.com/api.php?amount=10';\r\n        } else if (this.amount === 0 && this.category === '') {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=10&difficulty=${this.difficulty}`;\r\n        } else if (this.amount === 0 && this.difficulty === '') {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=10&category=${this.category}`;\r\n        } else if (this.amount === 0) {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=10&category=${this.category}&difficulty=${this.difficulty}`;\r\n        } else if (this.category === '' && this.difficulty === '') {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=${this.amount}`;\r\n        } else if (this.difficulty === '') {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=${this.amount}&category=${this.category}`;\r\n        } else if (this.category === '') {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=${this.amount}&difficulty=${this.difficulty}`;\r\n        } else {\r\n            fetchRequest = `https://opentdb.com/api.php?amount=${this.amount}&category=${this.category}&difficulty=${this.difficulty}`\r\n        }\r\n        this.fetchRequest = fetchRequest;\r\n    }\r\n    \r\n    async getQuiz() {\r\n        try {\r\n            const result = await fetch(this.fetchRequest);\r\n            const data = await result.json();\r\n            this.results = data;\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}\r\n\r\nclass readyQuiz {\r\n    constructor(questions, totalQuestions, name) {\r\n        this.questions = questions;\r\n        this.totalQuestions = totalQuestions; // use this to show the top score as well\r\n        this.name = name;\r\n    }\r\n    // 1. get data from state\r\n    setQuestion() {\r\n        if(this.questions.response_code > 0) {\r\n            console.log('Try being less selective, or lower the amount of questions...');\r\n            return -1; // I don't know if this is the right way to stop a function from working\r\n        }\r\n        this.questionNumber = 0;\r\n        this.currentQuestion = this.questions.results[0].question;\r\n        this.correctAnswer = this.questions.results[0].correct_answer;\r\n        this.category = this.questions.results[0].category;\r\n        this.incorrectAnswers = this.questions.results[0].incorrect_answers;\r\n        this.answerOptions = [this.correctAnswer, ...this.incorrectAnswers];\r\n        this.points = 0;\r\n    }\r\n    updateQAndA() {\r\n        this.questionNumber++;\r\n        this.currentQuestion = this.questions.results[this.questionNumber].question;\r\n        this.correctAnswer = this.questions.results[this.questionNumber].correct_answer;\r\n        this.category = this.questions.results[this.questionNumber].category;\r\n        this.incorrectAnswers = this.questions.results[this.questionNumber].incorrect_answers;\r\n        // see if this is where you need to empty it ---- ?\r\n        this.answerOptions = [];\r\n        this.answerOptions = [this.correctAnswer, ...this.incorrectAnswers];\r\n    \r\n    }\r\n    updateHeader() {\r\n        // update question count\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].questionNumber.innerHTML = `${this.questionNumber + 1}/${this.totalQuestions}`;\r\n        // update name (if needed)\r\n            // change it to \r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].name.innerHTML = this.name;\r\n        // update score\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].displayScore.innerHTML = `${this.points}/${this.totalQuestions}`;\r\n    }\r\n    updateQuestion() {\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].question.innerHTML = this.currentQuestion;\r\n    }\r\n    updateAnswers() {\r\n        let markup = '';\r\n        const shuffledArray = shuffle(this.answerOptions);\r\n        for (let cur of shuffledArray) {\r\n            let html = '<li id=\"%id%\">%question%</li>';\r\n            let newHTML = html.replace('%question%', cur);\r\n            newHTML = newHTML.replace('%id%', cur)\r\n            markup += newHTML;\r\n        }\r\n        // recent addition because answer options weren't going after rest\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"clearHTML\"]('.answerOptions');\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"DOMstrings\"].answerOptions.insertAdjacentHTML('afterbegin', markup);\r\n    }\r\n    nextQuestion() {\r\n        // if no questions left, show results page\r\n        if (this.questionNumber >= this.totalQuestions -1){\r\n            this.stage = 'result';\r\n            _view__WEBPACK_IMPORTED_MODULE_1__[\"clearHTML\"]('.resultsPage');\r\n            _view__WEBPACK_IMPORTED_MODULE_1__[\"displayResult\"]();\r\n        } else {\r\n            _view__WEBPACK_IMPORTED_MODULE_1__[\"clearHTML\"]('.answerOptions');\r\n            this.updateQAndA()\r\n            _view__WEBPACK_IMPORTED_MODULE_1__[\"setupAnswers\"]();\r\n            this.updateAnswers();\r\n            this.updateQuestion();\r\n            this.updateHeader();\r\n        }\r\n    }\r\n}\r\n\r\nfunction setupQuestionBoard(player) {\r\n    if(player === 1){                \r\n        // display header\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"setupHeader\"]();\r\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.updateHeader();\r\n        // questions\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestion\"]();\r\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.updateQuestion();\r\n        // answers\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"setupAnswers\"]();\r\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.updateAnswers(); // really this should be on the class and I should make a better function\r\n        // resetBTN\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"toggleBtns\"]();\r\n    } else {        \r\n        // display header\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"setupHeader\"]();\r\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player2.updateHeader();\r\n        // questions\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"setupQuestion\"]();\r\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player2.updateQuestion();\r\n        // answers\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"setupAnswers\"]();\r\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player2.updateAnswers(); // really this should be on the class and I should make a better function\r\n        // resetBTN\r\n        _view__WEBPACK_IMPORTED_MODULE_1__[\"toggleBtns\"]();\r\n    }\r\n\r\n}\r\n\r\n\r\nconst shuffle = function (array) {\r\n\tlet currentIndex = array.length;\r\n\tlet temporaryValue, randomIndex;\r\n\t// While there remain elements to shuffle...\r\n\twhile (0 !== currentIndex) {\r\n\t\t// Pick a remaining element...\r\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\tcurrentIndex -= 1;\r\n\t\t// And swap it with the current element.\r\n\t\ttemporaryValue = array[currentIndex];\r\n\t\tarray[currentIndex] = array[randomIndex];\r\n\t\tarray[randomIndex] = temporaryValue;\r\n\t}\r\n\treturn array;\r\n};\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/model.js?");

/***/ }),

/***/ "./src/js/view.js":
/*!************************!*\
  !*** ./src/js/view.js ***!
  \************************/
/*! exports provided: DOMstrings, toggleInputForm, setupQuestion, setupAnswers, toggleBtns, setupHeader, removeQandA, removeResultsPage, displayResult, categories, createCategoryList, clearHTML, renderLoader, clearLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMstrings\", function() { return DOMstrings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleInputForm\", function() { return toggleInputForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupQuestion\", function() { return setupQuestion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupAnswers\", function() { return setupAnswers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggleBtns\", function() { return toggleBtns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupHeader\", function() { return setupHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeQandA\", function() { return removeQandA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeResultsPage\", function() { return removeResultsPage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayResult\", function() { return displayResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"categories\", function() { return categories; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCategoryList\", function() { return createCategoryList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearHTML\", function() { return clearHTML; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderLoader\", function() { return renderLoader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearLoader\", function() { return clearLoader; });\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./main */ \"./src/js/main.js\");\n \r\n\r\n\r\nconst DOMstrings = {\r\n    question: document.querySelector('.question'),\r\n    answerOptions: document.querySelector('.answerOptions'),\r\n    container: document.querySelector('.container'),\r\n    questionNumber: document.querySelector('.questionNumber'),\r\n    name: document.querySelector('.name'),\r\n    displayScore: document.querySelector('.displayScore'),\r\n    inputForm: document.querySelector('.inputForm'),\r\n    header: document.querySelector('.header'),\r\n    resetBtn: document.querySelector('.startQuizAgain'),\r\n    newQuiz: document.querySelector('.newQuiz'),\r\n    resultsPage: document.querySelector('.resultsPage'),\r\n    categoryList: document.getElementById('categories'),\r\n    questionAmount: document.getElementById('amount'),\r\n    difficulty: document.getElementById('difficulty'),\r\n    category: document.getElementById('categories'),\r\n    loader: document.querySelector('.loader'),\r\n    loaderSpinner: document.querySelector('.loader i'),\r\n    buttonDiv: document.querySelector('.resetBtns'),\r\n    playerSelect: document.querySelector('.playerPage'),\r\n    twoPlayerForm: document.querySelector('.twoPlayerForm'),\r\n}\r\n\r\nfunction toggleInputForm() {\r\n    if (DOMstrings.inputForm.style.display === 'none'){\r\n        DOMstrings.inputForm.style.display = 'flex';\r\n    } else {\r\n        DOMstrings.inputForm.style.display = 'none';\r\n    }   \r\n}\r\nfunction setupQuestion() {\r\n    DOMstrings.question.style.display = 'block';\r\n}\r\nfunction setupAnswers() {\r\n    DOMstrings.answerOptions.style.display = 'block';\r\n}\r\nfunction toggleBtns() {\r\n    if (DOMstrings.buttonDiv.style.display === 'flex'){\r\n        DOMstrings.buttonDiv.style.display = 'none';\r\n    } else {\r\n        DOMstrings.buttonDiv.style.display = 'flex';\r\n    }\r\n    \r\n}\r\nfunction setupHeader() {\r\n    // change display setting to show elements\r\n    DOMstrings.header.style.display = 'flex';\r\n    DOMstrings.questionNumber.style.display = 'block';\r\n    DOMstrings.displayScore.style.display = 'block';\r\n}\r\n\r\nfunction removeQandA() {\r\n    DOMstrings.question.style.display = 'none';\r\n    DOMstrings.answerOptions.style.display = 'none';\r\n    DOMstrings.header.style.display = 'none';\r\n    DOMstrings.questionNumber.style.display = 'none';\r\n    DOMstrings.displayScore.style.display = 'none';\r\n}\r\n\r\nfunction removeResultsPage() {\r\n        DOMstrings.resultsPage.style.display = 'none';\r\n}\r\n\r\nfunction displayResult() {\r\n    removeQandA();\r\n    \r\n    DOMstrings.resultsPage.style.display = 'block';\r\n    \r\n    let html = `\r\n            <h1>Your result is: <span class=\"resultScore\">${_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.points}/${_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.totalQuestions}</span></h1>\r\n            <p>This means that <span class=\"resultCaption\">%comment%</span></p>\r\n    `;\r\n\r\n    const comment1 = `${_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].newQuiz1.name}, you need to hit the books more`;\r\n    const comment2 = `${_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].newQuiz1.name}, you are doing ok...`;\r\n    const comment3 = `${_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].newQuiz1.name}, you are quite a clever person`;\r\n\r\n    if (_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.points <= _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.totalQuestions * 0.5) { \r\n        html = html.replace('%comment%', comment1);\r\n    } else if (_main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.points > _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.totalQuestions * 0.5 && _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.points <= _main__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player1.totalQuestions * 0.75) {\r\n        html = html.replace('%comment%', comment2);      \r\n    } else {\r\n        html = html.replace('%comment%', comment3); \r\n    }\r\n    DOMstrings.resultsPage.insertAdjacentHTML('afterbegin', html);\r\n}\r\n\r\nconst categories = [\r\n    {id: 9, name: \"General Knowledge\"},\r\n    {id: 10, name: \"Entertainment: Books\"},\r\n    {id: 11, name: \"Entertainment: Film\"},\r\n    {id: 12, name: \"Entertainment: Music\"},\r\n    {id: 13, name: \"Entertainment: Musicals & Theatres\"},\r\n    {id: 14, name: \"Entertainment: Television\"},\r\n    {id: 15, name: \"Entertainment: Video Games\"},\r\n    {id: 16, name: \"Entertainment: Board Games\"},\r\n    {id: 17, name: \"Science & Nature\"},\r\n    {id: 18, name: \"Science: Computers\"},\r\n    {id: 19, name: \"Science: Mathematics\"},\r\n    {id: 20, name: \"Mythology\"},\r\n    {id: 21, name: \"Sports\"},\r\n    {id: 22, name: \"Geography\"},\r\n    {id: 23, name: \"History\"},\r\n    {id: 24, name: \"Politics\"},\r\n    {id: 25, name: \"Art\"},\r\n    {id: 26, name: \"Celebrities\"},\r\n    {id: 27, name: \"Animals\"},\r\n    {id: 28, name: \"Vehicles\"},\r\n    {id: 29, name: \"Entertainment: Comics\"},\r\n    {id: 30, name: \"Science: Gadgets\"},\r\n    {id: 31, name: \"Entertainment: Japanese Anime & Manga\"},\r\n    {id: 32, name: \"Entertainment: Cartoon & Animations\"}\r\n]\r\n\r\nfunction createCategoryList(categories) {\r\n    let markup = '';\r\n    for (let cur of categories) {\r\n        let html = `<option value=\"${cur.name}\" id=\"${cur.id}\">${cur.name}</option>`;\r\n        markup += html;\r\n    }\r\n    DOMstrings.categoryList.insertAdjacentHTML('beforeend', markup);\r\n}\r\n\r\n// this needs to go in some sort of init function\r\ncreateCategoryList(categories);\r\n\r\nfunction clearHTML(node) {\r\n    const thingToDelete = document.querySelector(node);\r\n    while (thingToDelete.firstChild) {\r\n        thingToDelete.removeChild(thingToDelete.firstChild);\r\n    }\r\n}\r\n\r\nfunction renderLoader() {\r\n    const loader = `\r\n        <div class=\"loader\">\r\n            <i class=\"fas fa-spinner\"></i>\r\n        </div>\r\n    `;\r\n    DOMstrings.container.insertAdjacentHTML('afterbegin', loader);\r\n}\r\n\r\nfunction clearLoader() {\r\n    const loader = document.querySelector('.loader');\r\n    if (loader) loader.parentElement.removeChild(loader);\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/js/view.js?");

/***/ })

/******/ });